name: Terraform Infrastructure Apply

on: 
  push:
    branches:
    - main
    paths:
      - 'gcp/modules/cloud_function/**'
      - 'gcp/cloud_function/**'
      - 'gcp/service/**'
      - 'gcp/function/**'
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to run deploy (dev, stg, prd)"
        type: environment
        required: true
        default: "dev"

jobs:
  infra:
    name: Infra Apply
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'dev' }}
    steps:
      - uses: actions/checkout@v2

      - name: Modify backend.tf
        run: |
          sed -i 's/terraform-gcp-function-state/terraform-gcp-function-state-${{ inputs.environment || 'dev' }}/g' backend.tf
        working-directory: gcp/service
      
      - name: Show changes
        run: git diff

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0-beta2
          terraform_wrapper: false
          working-directory: gcp/service

      - name: Terraform Version
        run: terraform --version

      - name: Export Google Cloud credentials
        run: echo "$GCP_SA_KEY" > gcp/service/credentials.json
        env:
          GCP_SA_KEY: ${{ secrets.CREDENTIALS }}
      
      - name: Terraform Init
        id: Init
        run: |
          terraform init
        working-directory: gcp/service
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./credentials.json

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out tf.plan \
          -var="credentials=./credentials.json" \
          -var="region=${{vars.REGION}}" \
          -var="project=${{vars.PROJECT}}" \
          -var="bucket_name=${{vars.BUCKET_NAME}}" \
          -var="object_name=${{vars.OBJECT_NAME}}"
        working-directory: gcp/service
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./credentials.json

      - name: Terraform apply
        id: apply
        run: terraform apply tf.plan
        working-directory: gcp/service
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./credentials.json

  check_function_change:
    name: Check changed files
    needs: infra
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check files
        id: check_files
        run: |
          git diff --name-only HEAD^ HEAD > files.txt
          echo "run_job=false" >> $GITHUB_OUTPUT
          while IFS= read -r file
          do
            echo $file
            if [[ $file == "function/"* ]]; then
              echo "run_job=true" >> $GITHUB_OUTPUT
              break
            fi
          done < files.txt

  update_source:
    name: Update Cloud function
    needs: check_function_change
    runs-on: ubuntu-latest
    environment: ${{ github.events.inputs.environment || 'dev' }}
    if: needs.check_function_change.outputs.run_job == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Create Zip file
        id: create_zip
        run: |
          zip_path="../functioncode.zip"
          cd function && zip -r $zip_path ./*
          cd ..
          echo "zip_path=$zip_path" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: function_artifact
          path: ${{ github.workspace }}/functioncode.zip

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: function_artifact
          path: gcp/cloudfunction

      - name: Modify backend.tf
        run: |
          sed -i 's/terraform-gcp-function-state/terraform-gcp-function-state-${{ inputs.environment || 'dev'}}/g' backend.tf
        working-directory: gcp/cloudfunction
      
      - name: Show changes
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0-beta2
          terraform_wrapper: false
          working-directory: gcp/cloudfunction
      
      - name: Export Google Cloud credentials
        run: echo "$GCP_SA_KEY" > gcp/cloudfunction/credentials.json
        env:
          GCP_SA_KEY: ${{ secrets.CREDENTIALS }}
      
      - name: Terraform Init
        id: Init
        run: |
          terraform init
        working-directory: gcp/cloudfunction
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./credentials.json

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out tf.plan \
          -var="credentials=./credentials.json" \
          -var="region=${{vars.REGION}}" \
          -var="project=${{vars.PROJECT}}" \
          -var="cloudfunction_name=${{vars.CLOUDFUNCTION_NAME}}" \
          -var="entry_point=${{vars.ENTRY_POINT}}" \
          -var="bucket_source_name=${{vars.BUCKET_SOURCE_NAME}}" \
          -var="object_source_name=function_${{ github.sha }}.zip" \
          -var="code_source=functioncode.zip" \
          -var="service_account_email=${{vars.SERVICE_ACCOUNT_EMAIL}}" \
          -var="bucket_trigger_name=${{vars.BUCKET_NAME}}"
        working-directory: gcp/cloudfunction
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./credentials.json   

      - name: Terraform apply
        id: apply
        run: terraform apply tf.plan
        working-directory: gcp/cloudfunction
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ./credentials.json